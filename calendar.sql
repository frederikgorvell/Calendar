
CREATE TABLE PARTICIPANT (
	participantID INT NOT NULL,	
	PRIMARY KEY (participantID)
	);
	
CREATE TABLE PERSON (
	participantID INT NOT NULL,
	name VARCHAR(30) NOT NULL,
	email VARCHAR(20),
	username VARCHAR(20) NOT NULL,
	password VARCHAR(20) NOT NULL,
	PRIMARY KEY (username),
	FOREIGN KEY (participantID) REFERENCES PARTICIPANT (participantID)
		ON DELETE CASCADE ON UPDATE CASCADE
	);
	
CREATE TABLE GROUPS (
	participantID INT NOT NULL,
	groupID INT NOT NULL,
	name VARCHAR(30) NOT NULL,
	email VARCHAR(20),
	PRIMARY KEY (groupID),
	FOREIGN KEY (participantID) REFERENCES PARTICIPANT (participantID)
		ON DELETE CASCADE ON UPDATE CASCADE
	);
	
CREATE TABLE PARTOF ( /* The relation between participant and group */
	groupID INT NOT NULL,
	participantID INT NOT NULL,
	PRIMARY KEY (groupID, participantID)
	);
	
CREATE TABLE ROOM (
	roomID INT NOT NULL,
	capacity INT NOT NULL,
	PRIMARY KEY (roomID)
	);
	
CREATE TABLE APPOINTMENT (
	AID INT NOT NULL,
	name VARCHAR(30),
	starttime VARCHAR(12) NOT NULL,
	endtime VARCHAR(12) NOT NULL,
	week VARCHAR(2) NOT NULL,
	description VARCHAR(150),
	location VARCHAR(30),
	username VARCHAR(20) NOT NULL,
	roomID INT,
	PRIMARY KEY (AID),
	FOREIGN KEY (username) REFERENCES PERSON(username)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (roomID) REFERENCES ROOM(roomID)
		ON DELETE CASCADE ON UPDATE CASCADE
	);

CREATE TABLE ATTENDING ( /* The relation between participant and appointment */
	AID INT NOT NULL,
	participantID INT NOT NULL,
	PRIMARY KEY (AID, participantID)
	

CREATE TABLE NOTIFICATION (	
	NID INT NOT NULL,
	AID INT NOT NULL,
	PRIMARY KEY (NID),
	FOREIGN KEY (AID) REFERENCES APPOINTMENT(AID)
		ON DELETE CASCADE ON UPDATE CASCADE
	);
